 Programming is the process of preparing a set of coded instructions which enables the computer to solve specific problems or to perform specific functions. The essence of computer programming is the encoding of the program for the computer by means of algorythms. The thing is that any problem is expressed in mathematical terms, it contains formulae, equations and calculations. But the computer cannot manipulate formulae, equations and calculations. Any problem must be specially processed for the computer to understand it, that is — coded or programmed.
 The phase in which the system computer programs are written is called the development phase. The programs are lists of instructions that will be followed by the control unit of the central processing unit (CPU). The instructions of the program must be complete and in the appropriate sequence, or else the wrong answers will result.
 To guard against these errors in logic and to document the program logical approach, logic plans should be developed. There are two common techniques for planning the logic of a program. The first technique is flowchart. At flowchart is a plan in the form of a graphic or pictorial representation that uses predefined symbols to illustrate the program logic. It is, therefore, a "picture" of the logical steps to be performed by the computer. Each of the predefined symbol shapes stands for a general operation. The symbol shape communicates the nature of the general operation, and the specifics are written within the symbol. At plastic or metal guide called a template is used to make drawing the symbols easier. The second technique for planning program logic is called pseudocode. Pseudocode is an imitation of actual program instructions. It allows a program-like structure without the burden of programming rules to follow.
 Pseudocode is less time-consuming for professional programmer than is flow charting. It also emphasizes a top-down approach to program structure. The operating system is a collection of program provided by the computer manufacturer that allows us to shedule jobs for the computer, to translate source programs into object programs, to sort data stored on secondary storage devices, and to copy data from any input device to any output device. These programs are called control programs, language programs and utility programs. The control program (often called the supervisor, monitor, or executive) is a main-storage-resident program. Its functions are to schedule jobs, shedule input and output for our programs, and to monitor the execution of our programs. The language processors are programs that translate source programs into object programs. There are three types of language processors: assemblers, compilers, and interpreters. Each language has its own language processor. The service programs are programs that are commonly used in all data processing centers.
 My number is +375(29)111-22-33. My email is vika.sumanyk@gmail.com. My number is +375(29)111-22-33. They have functions that are required by everyone using a computer. Examples of service programs include linkage editors to prepare object programs for execution, a librarian to catalog programs into a library area on magnetic disc, utility programs to transfer data from device to device, and sort-merge programs for sorting data on magnetic tape or disk.
 There are two kinds of errors or bugs with which programmers must deal. The first type is the coding error. Such errors are syntax errors that prevent the language processor from successfully translating the source program to object program code. The language processor identifies the nature and the location of the error on the source program listing, so these errors are relatively easy to find and correct. The second type of bug is the logic error. The computer program can be successfully translated, but the program does not produce the desired results. These errors are generally much more difficult to find and to correct than are coding errors.Logic errors can be avoided through careful planning of the program logic, but it is the programmer responsibility to test thoroughly all of the program functions, in order to verify that the program performs according to specfifications. There are many tools provided to the programmer to help in debugging the program logic.
 These tools are called debug packages or tracing routines. They assist the programmer in following the logic by printing out calculation results and field values used in making logic decisions in the program. In a few cases it may be necessary to use a memory dump — a printout of the instructions and date held in the computer memory — in order to find the cause of logic errors.
